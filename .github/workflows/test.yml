name: Test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  linters:
    name: Tests
    concurrency:
      group: tests-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: ubuntu:jammy
      env:
        BUILD_DIR: /home/ghr/_work/_temp
        RUST_LOG: hyperspace=trace,hyperspace_parachain=trace
      volumes:
        - /home/ghr/_work/_temp:/home/ghr/_work/_temp
    runs-on:
      - self-hosted
      - x64-monster
    timeout-minutes: 300
    steps:
      - name: Install git
        run: |
          apt update -y
          apt install git -y
          git --version

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup deps
        run: |
          git config --global --add safe.directory /__w/centauri/centauri

          apt update -y
          apt install -y \
            curl \
            netcat \
            iproute2 \
            gcc \
            g++ \
            build-essential \
            clang \
            libclang-dev \
            pkg-config \
            libssl-dev \
            unzip

          # Get Rust
          curl https://sh.rustup.rs -sSf | bash -s -- -y
          $HOME/.cargo/bin/rustup toolchain install nightly
          $HOME/.cargo/bin/rustup target add wasm32-unknown-unknown --toolchain nightly
          $HOME/.cargo/bin/rustup component add rustfmt --toolchain nightly
          $HOME/.cargo/bin/rustup component add rustfmt
          $HOME/.cargo/bin/rustup default nightly

          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Rustup show
        run: $HOME/.cargo/bin/rustup show

      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
          apt-get install -y nodejs
          npm install --global yarn
          node --version
          yarn --version

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      
      - name: Install zombienet
        run: |
          nix profile install "github:paritytech/zombienet/refs/pull/1316/merge#default
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install polkadot binary
        run: |
          curl -L https://github.com/paritytech/polkadot/releases/download/v0.9.43/polkadot -o /usr/local/bin/
  

      - name: Install parachain node
        run: |
          cargo b -p parachain-node --release && \
          cp ./target/release/parachain-node /usr/local/bin
  
      - name: Run local parachain cluster
        run: |
          cd centauri/scripts/zombienet && \
          nix run nixpkgs/master#process-compose -- up -f process-compose.yml


      - name: Wait until parachains are ready
        run: |
          METRICS_PORT=19987 ./wait-for-parachains-network.sh
          METRICS_PORT=9987 ./wait-for-parachains-network.sh 

      - name: Run all unit tests
        run: |
          SKIP_WASM_BUILD=1 cargo +nightly nextest run --locked --release --workspace --exclude ibc-derive --exclude hyperspace-testsuite

#      - name: Run simnode tests
#        run: |
#          cargo +nightly test -p simnode --locked --release

      - name: Run hyperspace integration tests
        run: |
          cargo +nightly test -p hyperspace-testsuite --locked --release

      - name: Terminate local parachain cluster
        run: |
          ./docker-compose -f scripts/parachain-launch/docker-compose.yml down -v