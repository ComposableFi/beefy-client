name: Test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  linters:
    name: Tests
    concurrency:
      group: tests-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: ubuntu:jammy
      env:
        BUILD_DIR: /home/ghr/_work/_temp
        RUST_LOG: hyperspace=trace,hyperspace_parachain=trace
      volumes:
        - /home/ghr/_work/_temp:/home/ghr/_work/_temp
    runs-on:
      - self-hosted
      - x64-monster
    timeout-minutes: 300
    steps:
      - name: Install git
        run: |
          apt update -y
          apt install git -y
          git --version
          whoami
          uname -a          

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup deps
        run: |
          git config --global --add safe.directory /__w/centauri/centauri

          apt update -y
          apt install -y \
            curl \
            netcat \
            iproute2 \
            gcc \
            g++ \
            build-essential \
            clang \
            libclang-dev \
            pkg-config \
            libssl-dev \
            unzip \
            net-tools
          
          netstat -ltup | grep LISTEN

          # Get Rust
          curl https://sh.rustup.rs -sSf | bash -s -- -y
          $HOME/.cargo/bin/rustup toolchain install nightly
          $HOME/.cargo/bin/rustup target add wasm32-unknown-unknown --toolchain nightly
          $HOME/.cargo/bin/rustup component add rustfmt --toolchain nightly
          $HOME/.cargo/bin/rustup component add rustfmt
          $HOME/.cargo/bin/rustup default nightly

          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Rustup show
        run: $HOME/.cargo/bin/rustup show

      - name: Install zombienet
        run: |
          curl -L https://github.com/paritytech/zombienet/releases/download/v1.3.67/zombienet-linux-x64 -o /usr/bin/zombienet && \
          chmod +x /usr/bin/zombienet

      # - name: Install process compose
      #   run: |
      #       curl -L https://github.com/F1bonacc1/process-compose/releases/download/v0.60.0/process-compose_Linux_x86_64.tar.gz -o /tmp/process-compose_Linux_x86_64.tar.gz && \
      #       tar xvfz /tmp/process-compose_Linux_x86_64.tar.gz && \
      #       mv process-compose /usr/bin/process-compose && \
      #       chmod +x /usr/bin/process-compose

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      - name: Install polkadot binary
        run: |
          curl -L https://github.com/paritytech/polkadot/releases/download/v0.9.43/polkadot -o /usr/bin/polkadot && \
          chmod +x /usr/bin/polkadot

  

      - name: Install parachain node
        run: |
          cargo b -p parachain-node --release && \
          cp ./target/release/parachain-node /usr/bin/parachain-node
          chmod +x /usr/bin/parachain-node
  
      - name: Run local parachain cluster
        run: |
          cd scripts/zombienet
          zombienet spawn ./config-network-a.json --provider native &
          zombienet spawn ./config-network-b.json --provider native &
# nohup process-compose up -f process-compose.yml -t=false &

      - name: Store network gateway IP
        run: |
          echo "PARA_HOST=127.0.0.1" >> $GITHUB_ENV
# GATEWAY_IP equals host ip where this docker container was ran, this ip has access to Docker port mapping.
# GATEWAY_IP=$(ip r l | grep default | awk '{print $3}')
# echo "GATEWAY_IP=$GATEWAY_IP" >> $GITHUB_ENV
# echo "RELAY_HOST=$GATEWAY_IP" >> $GITHUB_ENV
# cd scripts/zombienet && \
# nohup process-compose up -f process-compose.yml -t=false &

      - name: Wait until parachains are ready
        run: |
          sleep 100
          netstat -ltup | grep LISTEN
          METRICS_PORT=39988 ./scripts/zombienet/wait-for-parachains-network.sh
          METRICS_PORT=39998 ./scripts/zombienet/wait-for-parachains-network.sh 
          sleep 30000

      - name: Run all unit tests
        run: |
          SKIP_WASM_BUILD=1 cargo +nightly nextest run --locked --release --workspace --exclude ibc-derive --exclude hyperspace-testsuite

      - name: Run hyperspace integration tests
        run: |
          cargo +nightly test -p hyperspace-testsuite --locked --release

      - name: Terminate local parachain cluster
        run: |
          ./docker-compose -f scripts/parachain-launch/docker-compose.yml down -v