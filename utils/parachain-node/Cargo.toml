[package]
name = "parachain-node"
version = "0.1.0"
authors = ["Anonymous"]
description = "A new Cumulus FRAME-based Substrate Node, ready for hacking together a parachain."
license = "Unlicense"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/cumulus/"
edition = "2021"
build = "build.rs"

[dependencies]
clap = { workspace = true, features = ["derive"] }
derive_more = { workspace = true }
log = { workspace = true }
parity-scale-codec = { workspace = true }
serde = { workspace = true }
jsonrpsee = { workspace = true, features = ["server"] }

# Local
parachain-runtime = { path = "runtime" }
ibc-primitives = { workspace = true }
ibc-rpc = { workspace = true }
ibc-runtime-api = { workspace = true }
pallet-ibc = { workspace = true }

# Substrate
frame-benchmarking = { workspace = true, default-features = false }
frame-benchmarking-cli = { workspace = true, default-features = false }
pallet-transaction-payment-rpc = { workspace = true, default-features = false }
sc-basic-authorship = { workspace = true, default-features = false }
sc-chain-spec = { workspace = true, default-features = false }
sc-cli = { workspace = true, default-features = false }
sc-client-api = { workspace = true, default-features = false }
sc-consensus = { workspace = true, default-features = false }
sc-executor = { workspace = true, default-features = false }
sc-keystore = { workspace = true, default-features = false }
sc-network = { workspace = true, default-features = false }
sc-network-common = { workspace = true, default-features = false }
sc-rpc = { workspace = true, default-features = false }
sc-rpc-api = { workspace = true, default-features = false }
sc-service = { workspace = true, default-features = false }
sc-sysinfo = { workspace = true, default-features = false }
sc-telemetry = { workspace = true, default-features = false }
sc-tracing = { workspace = true, default-features = false }
sc-transaction-pool = { workspace = true, default-features = false }
sc-transaction-pool-api = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-blockchain = { workspace = true, default-features = false }
sp-consensus = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-core = { workspace = true }
sp-inherents = { workspace = true, default-features = false }
sp-keystore = { workspace = true }
sp-offchain = { workspace = true, default-features = false }
sp-runtime = { workspace = true }
sp-session = { workspace = true, default-features = false }
sp-timestamp = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
substrate-frame-rpc-system = { workspace = true, default-features = false }
substrate-prometheus-endpoint = { workspace = true, default-features = false }
try-runtime-cli = { workspace = true, optional = true }
sc-network-sync = { workspace = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }
xcm = { workspace = true }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-inprocess-interface = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
cumulus-relay-chain-rpc-interface = { workspace = true }
cumulus-relay-chain-minimal-node = { workspace = true }
[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = false }

[features]
default = []
runtime-benchmarks = [
	"parachain-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
]
try-runtime = ["parachain-runtime/try-runtime", "try-runtime-cli"]
testing = ["parachain-runtime/testing"]
